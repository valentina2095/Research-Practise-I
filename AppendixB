restart:with(inttrans):
eq:=diff(P(x,t),t)=eta*diff(P(x,t),x,x,x);
eq1:=P(x,0)=Dirac(x-X);
eq2:=fourier(eq,x,k);
fourier(P(x,t),x,k)=1/sqrt(2*Pi)*Int(P(x,t)*exp(-I*k*x),x=-infinity..infinity);
eq3:=fourier(eq1,x,k);
fourier(P(x,t),x,k)=P(t);
eq4:=subs(fourier(P(x,t),x,k)=P(t),eq2);
P(0)=rhs(eq3);
eq5:=dsolve({eq4,P(0)=rhs(eq3)});
P(x,t)=1/sqrt(2*Pi)*Int(rhs(eq5)*exp(I*k*x),k=-infinity..infinity);
eq6:=P(x,t)=invfourier(rhs(eq5),k,x) assuming X>0 and eta>0 and t>0; 
eq7:=P(x,t)=simplify(convert(rhs(eq6),AiryAi),power,symbolic);
eq8:=P(x,y,t)=subs(eta=eta,rhs(eq7))*subs(x=y,X=Y,eta=eta,rhs(eq7));  

with(ImageTools);with(LinearAlgebra);with(inttrans):
with(VectorCalculus);
imagefile := cat(kernelopts(datadir), 
"/help/ImageTools/brain3.jpg"):
geom := Scale(Read(imagefile),1);
View(geom); 
ñas:=factor(Laplacian(rhs(eq8),cartesian[x,y,z]));
ños:=diff(rhs(eq8),x);
ñosA:=diff(rhs(eq8),y);
ñes:=x*diff(rhs(eq8),y)-y*diff(rhs(eq8),x);
ñas1:=(i,j,alpha)->evalf(subs({x=i,X=6,y=j,Y=6,eta=alpha,t=0.5},ñas));
ñes1:=(i,j,alpha)->evalf(subs({x=i,X=6,y=j,Y=6,eta=alpha,t=0.5},ñes));
ños1:=(i,j,alpha)->evalf(subs({x=i,X=6,y=j,Y=6,eta=alpha,t=0.5},ños));
ños1A:=(i,j,alpha)->evalf(subs({x=i,X=6,y=j,Y=6,eta=alpha,t=0.5},ñosA));
gauss11:=(alpha)->Matrix((i,j)->evalf(ñas1(i,j,alpha)),11);
gauss11A:=(alpha)->Matrix((i,j)->evalf(ñes1(i,j,alpha)),11);
dx:=(alpha)->Matrix((i,j)->evalf(ños1(i,j,alpha)),11);
dy:=(alpha)->Matrix((i,j)->evalf(ños1A(i,j,alpha)),11);
geomgauss11:=(alpha)->Convolution(geom,gauss11(alpha),weight=1);
geomgauss11A:=(alpha)->Convolution(geom,gauss11A(alpha),weight=1);
geomdx:=(alpha)->Convolution(geom,dx(alpha),weight=1);
geomdy:=(alpha)->Convolution(geom,dy(alpha),weight=1);
edge := Array (abs (geomdx(9.1)) + abs (geomdy(9.1)), datatype=float[8]);
min_v, max_v := rtable_scanblock (edge, [rtable_dims (edge)], 'Minimum', 'Maximum');
delta_v := max_v - min_v;
img_edge := Array ((edge-min_v)/delta_v, order=C_order, datatype=float[8]);
View([Scale(geom,2),Scale((img_edge),2)]);
View(img_edge);
st1:=Stack([geom,geomgauss11(0.5),geomgauss11(1),geomgauss11(1.5)],horizontal); 
st2:=Stack([geomgauss11(2),geomgauss11(2.5),geomgauss11(3),geomgauss11(3.5)],horizontal); 
st3:=Stack([geomgauss11(4),geomgauss11(4.5),geomgauss11(5),geomgauss11(5.5)],horizontal); 
st4:=Stack([geomgauss11(6),geomgauss11(6.5),geomgauss11(7),geomgauss11(7.5)],horizontal);
st5:=Stack([geomgauss11(8),geomgauss11(8.5),geomgauss11(9),geomgauss11(9.5)],horizontal);
st:=Stack([st1,st2,st3,st4,st5],vertical);
View(Scale(st,1));
Write("lucas150.jpg",st);
for i from 1 to 10 do View(geomgauss11(0.5*i)) end do;
st1A:=Stack([geom,geomgauss11A(0.5),geomgauss11A(1),geomgauss11A(1.5)],horizontal);
st2A:=Stack([geomgauss11A(2),geomgauss11A(2.5),geomgauss11A(3),geomgauss11A(3.5)],horizontal); 
st3A:=Stack([geomgauss11A(4),geomgauss11A(4.5),geomgauss11A(5),geomgauss11A(5.5)],horizontal); 
st4A:=Stack([geomgauss11A(6),geomgauss11A(6.5),geomgauss11A(7),geomgauss11A(7.5)],horizontal); 
st5A:=Stack([geomgauss11A(8),geomgauss11A(8.5),geomgauss11A(9),geomgauss11A(9.5)],horizontal);
stA:=Stack([st1A,st2A,st3A,st4A,st5A],vertical);
View(stA);
for i from 1 to 20 do View(geomgauss11A(0.1*i)) end do;
